source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
sum(neighbours[i,j,])
i=1
j=1
sum(neighbours[i,j,])
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
plot(lattice)
source('~/GitHub/epidemics/BasePercolation.R')
plot(lattice)
#idea to randomize the direction if multiple directions are possible
dir <- sample(x = c(1,2,3,4),size = 1,replace = TRUE)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
sample(4)
sample(x=4,n=1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1)
sample(x=4,size = 1,replace=TRUE)
sample(x=4,size = 1,replace=TRUE)
sample(x=4,size = 1,replace=TRUE)
sample(x=4,size = 1,replace=TRUE)
sample(x=4,size = 1,replace=TRUE)
sample(x=4,size = 1,replace=TRUE)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
View(lattice)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
View(testlattice)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
View(lattice)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
#idea to randomize the direction if multiple directions are possible
#make it more likely to go where not been before
prob1 <- 1/lattice[i-1,j]
prob2 <- 1/lattice[i,j+1]
prob3 <- 1/lattice[i+1,j]
prob4 <- 1/lattice[i,j-1]
source('~/GitHub/epidemics/BasePercolation.R')
?assign
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
min(... = 1,2,3,4)
min(... = 1,2,3,0.4)
source('~/GitHub/epidemics/BasePercolation.R')
i=5
j=1
#   if(lattice[i+1,j]==1){
#     belongsToThisCluster[i,j] <<- 1 #has neighbour at bottom
#   }
#   if(lattice[i+1,j-1]==1 && isAtLeftEdge){
#     belongsToThisCluster[i,j] <<- 1 #has neighbour at left
#   }
#   if(belongsToThisCluster[i,j] == 0){
#     return(0)
#   }
# }
dirDecision <- function(i,j){
visitedTop <- 0 # times the node to the top has been visited
visitedBot <- 0
visitedLeft <- 0
visitedRight <- 0
if(i==1 && j == 1){
visitedTop <- 0
visitedLeft <- 0
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
} else if(i==1 ){
visitedTop <- 0
visitedLeft <- lattice[i,j-1]
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
} else if(j==1 ){
visitedTop <- lattice[i-1,j]
visitedLeft <- 0
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
} else {
visitedTop <- lattice[i-1,j]
visitedLeft <- lattice[i,j-1]
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
}
}
#   if(lattice[i+1,j]==1){
#     belongsToThisCluster[i,j] <<- 1 #has neighbour at bottom
#   }
#   if(lattice[i+1,j-1]==1 && isAtLeftEdge){
#     belongsToThisCluster[i,j] <<- 1 #has neighbour at left
#   }
#   if(belongsToThisCluster[i,j] == 0){
#     return(0)
#   }
# }
dirDecision <- function(i,j){
visitedTop <- 0 # times the node to the top has been visited
visitedBot <- 0
visitedLeft <- 0
visitedRight <- 0
if(i==1 && j == 1){
visitedTop <- 0
visitedLeft <- 0
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
} else if(i==1 ){
visitedTop <- 0
visitedLeft <- lattice[i,j-1]
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
} else if(j==1 ){
visitedTop <- lattice[i-1,j]
visitedLeft <- 0
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
} else {
visitedTop <- lattice[i-1,j]
visitedLeft <- lattice[i,j-1]
visitedRight <- lattice[i,j+1]
visitedBot <- lattice[i+1,j]
}
print(visitedTop)
}
dirDecision(5,1)
dirDecision(5,1)
source('~/GitHub/epidemics/BasePercolation.R')
dirDecision(5,1)
source('~/GitHub/epidemics/BasePercolation.R')
min(1,2,3,4)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
which.min(1,1,1,1)
which.min(c(1,1,1,1)
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
which.min(c(1,1,1,1))
which.min(c(1,1,1,1))
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R', echo=TRUE)
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
a = inf
a
a <- Inf
a
1/0
which.max(a,1)
which.max(c(a,1))
source('~/GitHub/epidemics/BasePercolation2.R')
dirDecision(2,2)
source('~/GitHub/epidemics/BasePercolation2.R')
dirDecision(2,2)
source('~/GitHub/epidemics/BasePercolation2.R')
dirDecision(2,2)
dirDecision(3,5)
dirDecision(2,7)
dirDecision(7,2)
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation2.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
View(lattice)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
View(lattice)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
move(2,2,TRUE,TRUE)
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
move(2,2,TRUE,TRUE)
a<-move(2,2,TRUE,TRUE)
a
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
library('plot.matrix')
set.seed(5)
p <- 0.7
#initialise and plot lattice
M <- 20 #size of usable array
L <- M+2 #expand array by 1 in each direction to make it uneccesary to inculde special cases for edges
lattice <- array(rbinom(n = L*L,1,p), dim = c(L,L))
lattice[1,] <-0
lattice[L,] <-0
lattice[,1] <-0
lattice[,L] <-0
plot(lattice)
startTop <- which(lattice[2,]==1)
startTop
startLeft <- which(lattice[,2]==1)
startLeft
startLeft <- which(lattice[c(3:L-1),2]==1)
startLeft <- which(lattice[c(3:L-1),2]==1)+3
startLeft <- which(lattice[c(3:L-1),2]==1)+2
startTop <- which(lattice[1,]==1)
startTop <- which(lattice[1,]==1)
startTop <- which(lattice[2,]==1)
startTop <- which(lattice[2,]==1)
startLeft <- which(lattice[,2]==1)+2 # +2 necessary due to diff in M vs L and to avoid starting at [2,2] twice
startLeft <- which(lattice[,2]==1)+1 # +2 necessary due to diff in M vs L and to avoid starting at [2,2] twice
startLeft <- which(lattice[,2]==1)+1 # +1 necessary to avoid starting at [2,2] twice
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
source('~/GitHub/epidemics/BasePercolation.R')
