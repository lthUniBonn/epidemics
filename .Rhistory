source('~/GitHub/epidemics/TreePercolation.R')
plot(TreeList[[which(TreeList)==largestCluster]])
plot(treeList[[which(TreeList)==largestCluster]])
plot(treeList[[which(treeList)==largestCluster]])
plot(treeList[[which(treeList==largestCluster)]])
View(treeList)
View(treeList)
View(treeList)
counts
plot(TreeList[[264]])
plot(treeList[[264]])
plot(treeList[[263]])
plot(treeList[[265]])
lattice <- array(rbinom(n = L*L,1,p), dim = c(L,L))
#lattice <- array(c(0,0,0,0,0,1,1,0,0,0,1,0,0,1,1,1,0,0,0,0), dim=c(4,5))
lattice[1,] <-0
lattice[L,] <-0
lattice[,1] <-0
lattice[,L] <-0
plot(lattice)
#plot(lattice)
plot(lattice[c(20:35), c(20:35)])
#plot(lattice)
plot(lattice[c(18:40), c(40:45)])
#plot(lattice)
plot(lattice[c(17:40), c(39:45)])
lattice[25,32]
lattice[18,40]
lattice[24,21]
lattice[24,22]
lattice[]
source('~/GitHub/epidemics/TreePercolation.R')
source('~/GitHub/epidemics/TreePercolation.R')
source('~/GitHub/epidemics/tree_example.R')
source('~/GitHub/epidemics/TreePercolation.R')
source('~/GitHub/epidemics/explicitExample.R')
a <- Node$new(paste0(1,",",2))
b<- a$AddChild(paste0(2,",",2))
c<- b$AddChild(paste0(2,",",3))
d <- b$AddChild(paste0(3,",",3))
d$value <- 29
b$i <- 2
b$j <- 2
d$i <- 3
d$j <- 3
print(a)
e <- Climb(a, name = paste0(3,",",3))
print(e$value)
e$value <- 7
print(e$value)
source('~/GitHub/epidemics/TreePercolation.R')
treeList[[5]]$i<-123456789
#debugging attempts
largestIndex <- which.max(counts)
print(treeList[[largestIndex]])
print(treeList[[largestIndex+1]])
plot(treeList[[largestIndex+1]])
source('~/GitHub/epidemics/TreePercolation.R')
plot(oldLattice)
source('~/GitHub/epidemics/TreePercolation.R')
View(oldLattice)
FindNode(treeList[[clusterID]], name = paste0(25,",",32))
View(lattice)
source('~/GitHub/epidemics/TreePercolationExp.R')
oldLattice[25,32] <-1
oldLattice[18,40] <-1
plot(oldLattice)
occupations <-length(which(oldlattice ==1))
occupations <-length(which(oldLattice ==1))
occupations <-length(which(oldLattice ==1))-2*L-2*(L-2)
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
View(lattice)
View(treeList)
View(lattice)
#----------------------spanning Cluster------------------------------------------
for(r in c(1:length(treeList))){
print(r)
}
renamingVector <- list()
renamingVector <- append(renamingVector,c(1,2))
View(renamingVector)
renamingVector <- data.frame()
renamingVector <- append(renamingVector,c(1,2))
View(renamingVector)
?rbind
renamingVector <- data.frame()
renamingVector <- data.frame(c(1,2,3,4))
View(treeList)
View(renamingVector)
renamingVector <- data.frame(c(1,2),c(3,4))
View(renamingVector)
rbind(renamingVector,c(5,6))
View(renamingVector)
renamingVector <-rbind(renamingVector,c(5,6))
View(renamingVector)
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
View(renamingVector)
which(renamingVector[1,2])
which(lattice == renamingVector[1,2])
lattice[which(lattice == renamingVector[1,2])] <- renamingVector[1,1]
plot(treeList[[27]])
#----------------------spanning Cluster------------------------------------------
for(r in c(1:length(treeList))){
lattice[which(lattice == renamingVector[r,1])] <- renamingVector[r,2]
}
source('~/GitHub/epidemics/TreePercolationExp.R')
#----------------------spanning Cluster------------------------------------------
leftIndices <- numeric(length = L-2)
topIndices <- numeric(length = L-2)
rightIndices <- numeric(length = L-2)
botIndices <- numeric(length = L-2)
for(y in (2:(L-1))){ # should use apply or outer
leftIndices[y] <- lattice[y,2]
topIndicies[z] <- lattice[2,y]
rightIndices[y] <- lattice[y,L-1]
botIndicies[z] <- lattice[L-1,y]
}
for(y in (2:(L-1))){ # should use apply or outer
leftIndices[y] <- lattice[y,2]
topIndices[z] <- lattice[2,y]
rightIndices[y] <- lattice[y,L-1]
botIndicies[z] <- lattice[L-1,y]
}
for(y in (2:(L-1))){ # should use apply or outer
leftIndices[y] <- lattice[y,2]
topIndices[y] <- lattice[2,y]
rightIndices[y] <- lattice[y,L-1]
botIndicies[y] <- lattice[L-1,y]
}
for(y in (2:(L-1))){ # should use apply or outer
leftIndices[y] <- lattice[y,2]
topIndices[y] <- lattice[2,y]
rightIndices[y] <- lattice[y,L-1]
botIndices[y] <- lattice[L-1,y]
}
leftIndices <- unique(leftIndices)
unique(x = leftIndices,incomparables = 0)
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
renameTime1 <- proc.time()
for(r in c(1:length(treeList))){
lattice[which(lattice == renamingVector[r,1])] <- renamingVector[r,2] #takes 0.09 second for M=100
}
renameTime <- proc.time()-renameTime1
source('~/GitHub/epidemics/TreePercolationExp.R')
View(renamingVector)
source('~/GitHub/epidemics/TreePercolationExp.R')
View(nonRenamedLattice)
View(renamedLattice)
source('~/GitHub/epidemics/TreePercolationExp.R')
View(nonRenamedLattice)
View(renamedLattice)
source('~/GitHub/epidemics/TreePercolationExp.R')
usedClusters <- unique(lattice)
View(usedClusters)
usedClusters <- unique(lattice[,])
usedClusters <- unique(lattice, MARGIN = 1)
View(usedClusters)
usedClusters <- unique(lattice[,], MARGIN = 1)
usedClusters <- unique(lattice[,], MARGIN = c(1,2))
leftInd <- unique(lattice[1,])
leftInd <- unique(lattice[2,])
leftInd <- unique(lattice[,2])
usedClusters <- unique(lattice[,])
View(usedClusters)
View(usedClusters)
usedClusters <- unique(lattice[])
as.vector(lattice)
usedClusters <- unique(as.vector(lattice))
sizes <- table(as.vector(lattice))
plot(sizes)
?plot
sizes[names(sizes)==0] <- 0
renamingVector <<- rbind(renamingVector,c(left,top))
plot(sizes)
sizes[1,]
sizes[1]
sizes[2,1]
sizes
hist(sizes)
hist(sizes)
plot(sizes)
renamingVector <- sort(renamingVector)
renamingVector <- sort(x=renamingVector[1,],)
View(renamingVector)
source('~/GitHub/epidemics/TreePercolationExp.R')
renamingVector <- sort(x=renamingVector[,1])
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
renamingVector <- order(renamingVector)
renamingVector
source('~/GitHub/epidemics/TreePercolationExp.R')
renamingVector <- renamingVector[order(renamingVector[1,]]
renamingVector <- renamingVector[order(renamingVector[1,])]
View(renamingVector)
source('~/GitHub/epidemics/TreePercolationExp.R')
renamingVector <- renamingVector[order(renamingVector[,1])]
renamingVector <- renamingVector[order(renamingVector[])]
renamingVector <- renamingVector[order(renamingVector[,])]
renamingVector <- renamingVector[order(renamingVector[1,])]
View(renamingVector)
source('~/GitHub/epidemics/TreePercolationExp.R')
View(lattice)
source('~/GitHub/epidemics/TreePercolationExp.R')
View(lattice)
source('~/GitHub/epidemics/TreePercolationExp.R')
View(lattice)
View(renamingVector)
View(nonRenamedLattice)
View(renamedLattice)
source('~/GitHub/epidemics/TreePercolationExp.R')
hist(sizes)
plot(sizes)
largestCluster <- max(sizes)
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
set.seed(1)
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
M**2
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
# usedClusters <- unique(as.vector(lattice))
# for(x in usedClusters){
#
# }
write(x = c(M**2, runTime), file = "timesRenaming.txt", append = TRUE,sep = "\t")
runTime[1]
# usedClusters <- unique(as.vector(lattice))
# for(x in usedClusters){
#
# }
write(x = c(M**2, runTime[1]), file = "timesRenaming.txt", append = TRUE,sep = "\t")
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
View(renamingVector)
renamingVector <<- rbind(renamingVector, c(top,left))
source('~/GitHub/epidemics/TreePercolationExp.R')
View(renamingVector)
which(renamingVector[,2]==3)
renamingVector[which(renamingVector[,2]==3)]
renamingVector[1,which(renamingVector[,2]==3)]
renamingVector[which(renamingVector[,2]==3),2]
renamingVector[which(renamingVector[,2]==3),1]
#--------------------------------renaming-----------------------------------------
#change all the lattice which = second row renaming vector to first row
changeThese <- renamingVector[which(renamingVector[,2]==2),1]
#--------------------------------renaming-----------------------------------------
#change all the lattice which = second row renaming vector to first row
changeThese <- renamingVector[which(renamingVector[,2]==2),1]
lattice[which(lattice == changeThese)] <<- renamingVector[which(renamingVector[,2]==2),2]
renamingVector[which(renamingVector[,2]==2),1]
renamingVector[which(renamingVector[,2]==3),1]
#--------------------------------renaming-----------------------------------------
#change all the lattice which = second row renaming vector to first row
changeThese <- renamingVector[which(renamingVector[,2]==3),1]
lattice[which(lattice == changeThese)] <<- renamingVector[which(renamingVector[,2]==3),2]
lattice[which(lattice == changeThese)] <- renamingVector[which(renamingVector[,2]==3),2]
source('~/GitHub/epidemics/TreePercolationExp.R')
View(lattice)
View(lattice)
View(renamingVector)
source('~/GitHub/epidemics/TreePercolationExp.R')
lattice[which(lattice == changeThese)] <- renamingVector[which(renamingVector[,2]==3),2]
lattice[which(lattice == renamingVector[,1])] <- renamingVector[which(renamingVector[,2]==3),2]
source('~/GitHub/epidemics/TreePercolationExp.R')
renamingVector[,1]
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
source('~/GitHub/epidemics/TreePercolationExp.R')
